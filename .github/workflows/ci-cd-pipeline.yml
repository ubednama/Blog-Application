name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install server dependencies
        run: npm install

      - name: Install client dependencies
        working-directory: ./client
        run: npm install

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: client/dist

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: client/dist

      - name: Trigger Deploy to Render
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          if [ -z "$RENDER_DEPLOY_HOOK_URL" ]; then
            echo "RENDER_DEPLOY_HOOK_URL is not set"
            exit 1
          fi
          curl -X POST "$RENDER_DEPLOY_HOOK_URL"

      - name: Verify Deployment
        run: |
          sleep 60  # Wait for the deployment to complete
          curl -s -o /dev/null -w "%{http_code}" https://book-exchange-platform-vf2q.onrender.com
          if [ $? -ne 0 ]; then
            echo "Deployment failed"
            exit 1
          else
            echo "Deployment successful"
          fi
